<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox6.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Q3+AsJaEjCgAAAAASUVORK5CYII=
</value>
  </data>
</root>